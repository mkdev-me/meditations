position: 8
title: Дилемма качества и результата
body: |
  В&nbsp;подавляющем числе случаев программист пишет код не&nbsp;для себя, а&nbsp;для работодателя. Работодатель, в&nbsp;свою очередь, создаёт продукт для конечного пользователя. В&nbsp;итоге программист пишет код для конечного пользователя, который ничего не&nbsp;знает о&nbsp;самом коде. Пользователя волнует лишь сам продукт.

  Но&nbsp;у&nbsp;некоторых программистов развивается профессиональная болезнь: перфекционизм. И&nbsp;вместо того, чтобы думать о&nbsp;конечном продукте и&nbsp;пользователях, программист начинает писать самую надежную, красивую, стабильную, выверенную до&nbsp;каждого символа систему. У&nbsp;такой системы есть лишь один недостаток: она либо никогда не&nbsp;увидит свет, либо сорвёт все сроки и&nbsp;подведёт работодателя.

  Поэтому нужно помнить: лучше работающий код, чем идеальный. Работающий код можно итеративно улучшать и&nbsp;доводить до&nbsp;идеала. Работающий код не&nbsp;обязательно сразу&nbsp;же предоставлять на&nbsp;суд общественности. Если всё готово и&nbsp;работает, но&nbsp;до&nbsp;дедлайна остаётся пара дней&nbsp;&mdash; то&nbsp;это и&nbsp;есть тот самый момент для полировки результата своей работы.

  В&nbsp;этот момент у&nbsp;некоторых программистов развивается профессиональная болезнь: раздолбайство. Он&nbsp;начинает всеми мыслимыми и&nbsp;немыслимыми способами срезать углы и&nbsp;идти на&nbsp;ненужные компромиссы с&nbsp;самим с&nbsp;собой. Результат такого подхода будет работать, но&nbsp;имеет шансы опозорить и&nbsp;программиста и&nbsp;работодателя, а&nbsp;также расстроить конечного пользователя и&nbsp;сделать будущие изменения кода максимально сложными.

  Решение этой дилеммы кроется в&nbsp;балансе. Хороший профессионал помнит, ради кого он&nbsp;пишет код. Но&nbsp;он&nbsp;также имеет внутренние стандарты и&nbsp;принципы, которые даже в&nbsp;самых стеснённых временных условиях не&nbsp;позволят создать позорного монстра.

opinions:
  - body: |
      Ты должен научиться понимать бизнес, ведь это он приносит деньги и платит тебе зарплату. При этом, ты не должен слепо делать то, что он говорит.

      Представь, что ты врач, а пациент — это бизнес. Пациент требует прекратить бессмысленное мытье рук при подготовке к операции, так как это занимает слишком много времени. Но врач не должен подчиняться его требованиям. Он профессионал, он лучше знает риски опасности заражения, чем пациент. Было бы непрофессионально подчиняться воле пациента.
    author: isaev
  - body: |
      Устраиваясь на работу, нужно обязательно спросить, какие стандарты качества кода существуют в данной компании. Они могут быть более или менее требовательные, могут проверяться через код-ревью или автоматически, у всех это по-разному. Хорошо, когда такие стандарты есть, плохо — когда их нет.

      Если программист работает над кодом в одиночку, то ему особенно важно иметь собственные стандарты качества, так как его некому проверить. Если их все еще нет, то их необходимо создать и для этого есть много статей и книг.

      Такие стандарты могут спасти от двух крайностей, не дадут уйти в раздолбайство и ограничат перфекционизм. Все, что подходит под эти правила, можно принимать и не дорабатывать.
    author: chepe4pi

resources:
  - slug: professionalnaya-deformatsiya-stremlenie-k-sistemam-i-smert-kreativnosti
  - slug: 5-sovetov-kak-sohranyat-kachestvo-koda-i-razvivatsya-kogda-vsem-vokrug-plevat


